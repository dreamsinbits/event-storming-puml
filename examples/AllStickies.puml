@startuml

!include ../src/EventStorming.iuml

DomainEvent('A state change that happened in a subdomain', SomethingHappened, $Command('Initiates a state change'), $Aggregate('Holds a state and has behaviors for changing it. Informs about state changes via domain events.'), $Policy('Has to be enforced whenever something happens'), $System('Performs a command e.g. External Authentication System'), $User('Triggers a command'), $ReadModel('Data needed to perform the command'))
IntegrationEvent('Something that happened in a subdomain and is of interest for other subdomains', SomethingElseHappened)
Blocker('A risk, incorrect behavior, something that annoys the user', ABlocker)
Opportunity('Opportunity to solve a blocker', AnOpportunity)

AnOpportunity -- SomethingHappened_System
ABlocker -- SomethingHappened

SomethingHappened - SomethingElseHappened_Input

@enduml